workflows:
  android-apk-free:
    name: Android APK Build & Telegram Release
    environment:
      groups:
        - keystore
        - telegram_credentials
      vars:
        BUNDLE: "false"
    scripts:
      - name: Setup and Get Dependencies
        script: |
          flutter packages pub get

      - name: Run All Tests
        script: |
          echo "üß™ Running all tests..."
          flutter test --test-randomize-ordering-seed random
          echo "‚úÖ All tests passed!"

      - name: Build APK
        script: |
          echo "üîç Debug: Checking keystore and environment variables..."
          echo "Current directory: $(pwd)"
          echo "Looking for keystore at: mahakka.keystore"

          if [ -f "mahakka.keystore" ]; then
            echo "‚úÖ Keystore file found"
            echo "üîê Keystore file info: $(ls -la mahakka.keystore)"
          else
            echo "‚ùå Keystore file NOT found at mahakka.keystore"
            echo "üìÅ Root directory contents:"
            ls -la | grep keystore || echo "No keystore files found in root"
          fi

          echo "üîë Environment variables check:"
          echo "CM_KEYSTORE_PASSWORD: ${CM_KEYSTORE_PASSWORD:+(set)}${CM_KEYSTORE_PASSWORD:+ (length: ${#CM_KEYSTORE_PASSWORD})}"
          echo "CM_KEY_ALIAS: ${CM_KEY_ALIAS:+(set)}${CM_KEY_ALIAS:+ (value: $CM_KEY_ALIAS)}"
          echo "CM_KEY_PASSWORD: ${CM_KEY_PASSWORD:+(set)}${CM_KEY_PASSWORD:+ (length: ${#CM_KEY_PASSWORD})}"

          if [ -f "mahakka.keystore" ] && [ -n "$CM_KEYSTORE_PASSWORD" ]; then
            echo "üîê Configuring signing for release build..."
            export STORE_FILE="mahakka.keystore"
            export STORE_PASSWORD="$CM_KEYSTORE_PASSWORD"
            export KEY_ALIAS="mahakka"
            export KEY_PASSWORD="${CM_KEY_PASSWORD:-$CM_KEYSTORE_PASSWORD}"

            echo "üìã Exporting signing environment variables:"
            echo "STORE_FILE: $STORE_FILE"
            echo "STORE_PASSWORD: ${STORE_PASSWORD:+(set)} (length: ${#STORE_PASSWORD})"
            echo "KEY_ALIAS: $KEY_ALIAS"
            echo "KEY_PASSWORD: ${KEY_PASSWORD:+(set)} (length: ${#KEY_PASSWORD})"
          else
            echo "‚ö†Ô∏è Building unsigned APK (no keystore or password)"
            echo "‚ùå Reason: "
          
            if [ ! -f "mahakka.keystore" ]; then
              echo "   - Keystore file not found"
            fi
          
            if [ -z "$CM_KEYSTORE_PASSWORD" ]; then
              echo "   - CM_KEYSTORE_PASSWORD environment variable not set or empty"
            fi
          
            # Clear any previous signing environment variables
            unset STORE_FILE
            unset STORE_PASSWORD
            unset KEY_ALIAS
            unset KEY_PASSWORD
          fi

          echo "üèóÔ∏è Building APK..."
          flutter build apk --release

      - name: Debug Signing Configuration
        script: |
          echo "üîç Debug: Checking build environment after build..."
          echo "Environment variables:"
          env | grep -E '(STORE|KEY|PASSWORD)' || echo "No signing environment variables found"
          
          echo "üìÅ Checking build outputs:"
          ls -la build/app/outputs/flutter-apk/ || echo "No build outputs directory"
          
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "üì¶ APK file exists, checking signing status:"
            # Check if APK is signed
            if keytool -printcert -jarfile build/app/outputs/flutter-apk/app-release.apk 2>/dev/null; then
              echo "‚úÖ APK appears to be signed"
            else
              echo "‚ùå APK is NOT signed or cannot verify signature"
              echo "Trying apksigner:"
              if command -v apksigner &> /dev/null; then
                apksigner verify --print-certs build/app/outputs/flutter-apk/app-release.apk || echo "apksigner verification failed"
              else
                echo "apksigner not available"
              fi
            fi
          fi

      - name: Extract and Display Signing Information
        script: |
          echo "=== APK SIGNING CERTIFICATE INFORMATION ==="
          echo "This information can be used to verify the APK authenticity"
          echo ""
          
          if [ -f "mahakka.keystore" ] && [ -n "$CM_KEYSTORE_PASSWORD" ]; then
            keytool -printcert -jarfile build/app/outputs/flutter-apk/app-release.apk
          
            keytool -printcert -jarfile build/app/outputs/flutter-apk/app-release.apk > signature_info.txt
          
            if command -v apksigner &> /dev/null; then
              echo ""
              echo "=== APKSIGNER VERIFICATION ==="
              apksigner verify --print-certs build/app/outputs/flutter-apk/app-release.apk
            fi
          
            SHA256_FINGERPRINT=$(keytool -printcert -jarfile build/app/outputs/flutter-apk/app-release.apk | grep "SHA256" | head -1 | sed 's/.*SHA256: //' | tr -d ':' | tr -d ' ')
            echo ""
            echo "=== QUICK VERIFICATION ==="
            echo "SHA-256 Fingerprint: $SHA256_FINGERPRINT"
          else
            echo "‚ö†Ô∏è No signing information available (unsigned build)"
            echo "This is a debug/unsigned APK for testing purposes"
          fi

    artifacts:
      - build/app/outputs/flutter-apk/*.apk
      - build/app/outputs/apk/release/*.apk
      - coverage/html/**
      - signature_info.txt

    publishing:
      email:
        recipients:
          - bitcoinizado@proton.me
        notify:
          success: true
          failure: true